class Maps{constructor(){this.list=[{levelID:1,map:[[1,0,0,0,0,0,0],[0,0,0,,0,0,0],[0,0,0,0,1,0,0],[0,0,0,0,0,0,0]],player:{position:{row:2,cell:3}},interactables:{pushBlocks:[{type:"default",position:{row:2,cell:2}}]}}]}getByLevelID(t){for(let e of this.list)if(e.levelID===t)return e}}class Tiles{constructor(){this.mapTiles=[{id:0,name:"floor",colour:"#ddd",obstructs:!1},{id:1,name:"wall",colour:"#999",obstructs:!0}],this.playerTiles=[{id:0,name:"rover",colour:"#000",obstructs:!0}],this.pushBlockTiles=[{id:0,name:"block",colour:"#c90",obstructs:!0}]}getByID(t,e){switch(t){case"map":return this.getMapTileByID(e);case"pushBlock":return this.getPushBlockTileByID(e)}}getMapTileByID(t){for(let e of this.mapTiles)if(e.id===t)return e}getPushBlockTileByID(t){for(let e of this.pushBlockTiles)if(e.id===t)return e}getPlayerTile(t=0){for(let e of this.playerTiles)if(e.id===t)return e}}class PushBlockTypes{constructor(){this.list=[{id:0,name:"default",tileID:0}]}getByName(t){for(let e of this.list)if(e.name===t)return e}}class Level{constructor(t,e=1){this.game=t,this.map=this.game.maps.getByLevelID(e)}locationAvailable(t,e){return!!this.locationExists(t,e)&&!this.getMapTile(t,e).obstructs}locationExists(t,e){return void 0!==this.map.map[t]&&void 0!==this.map.map[t][e]}getMapTile(t,e){if(!this.locationExists(t,e))return!1;var i=this.map.map[t][e];return this.game.tiles.getByID("map",i)}getNextAvailablePositionForDirection(t,e,i){var s=e,l=i;switch(t){case"up":e-=1;break;case"down":e+=1;break;case"left":i-=1;break;case"right":i+=1}return this.locationAvailable(e,i)?{row:e,cell:i}:{row:s,cell:l}}}class Player{constructor(t){this.game=t,this.position={row:t.level.map.player.position.row,cell:t.level.map.player.position.cell}}move(t){var e,i=this.game.level.getNextAvailablePositionForDirection(t,this.position.row,this.position.cell);(e=this.game.pushBlocks.getBlockByLocation(i.row,i.cell))?this.game.pushBlocks.moveBlock(t,e.id)&&(this.position.row=i.row,this.position.cell=i.cell):(this.position.row=i.row,this.position.cell=i.cell)}}class PushBlock{constructor(t,e,i,s){this.id=t,this.row=e,this.cell=i,this.tile=s}}class PushBlocks{constructor(t){this.game=t,this.list=[];for(let t of this.game.level.map.interactables.pushBlocks)this.add(t.type,t.position.row,t.position.cell)}add(t,e,i){var s=this.list.length,l=this.game.pushBlockTypes.getByName(t),o=this.game.tiles.getByID("pushBlock",l.tileID),a=new PushBlock(s,e,i,o);this.list.push(a)}getBlockByLocation(t,e){for(let i of this.list)if(i.row===t&&i.cell===e)return i}moveBlock(t,e){for(let s of this.list)if(s.id===e){var i=this.game.level.getNextAvailablePositionForDirection(t,s.row,s.cell);return(i.row!==s.row||i.cell!==s.cell)&&(!this.getBlockByLocation(i.row,i.cell)&&(s.row=i.row,s.cell=i.cell,!0))}return!1}}class Controls{constructor(t){this.game=t,this.listen()}listen(){var t=this;window.addEventListener("keydown",function(e){t.keyDown(e)})}keyDown(t){switch(t.key.toUpperCase()){case"W":this.game.player.move("up");break;case"S":this.game.player.move("down");break;case"A":this.game.player.move("left");break;case"D":this.game.player.move("right")}}}class Canvas{constructor(t){this.game=t,this.tileSize=64,this.c=document.getElementById("canvas"),this.ctx=this.c.getContext("2d"),this.setDimensions()}setDimensions(){this.c.height=this.c.clientHeight,this.c.width=this.c.clientWidth}drawFrame(){this.drawLevel(),this.drawPlayer()}drawLevel(){this.drawMap(),this.drawPushBlocks()}drawPlayer(){var t=this.game.tiles.getPlayerTile(),e=this.game.player.position.row*this.tileSize,i=this.game.player.position.cell*this.tileSize;this.drawTile(t.colour,e,i)}drawMap(){for(var t=this.game.level.map,e=0;e<t.map.length;e++)for(var i=t.map[e],s=0;s<i.length;s++){var l=i[s];this.drawMapTile(l,e,s)}}drawPushBlocks(){for(let i of this.game.pushBlocks.list){var t=i.row*this.tileSize,e=i.cell*this.tileSize;this.drawTile(i.tile.colour,t,e)}}drawMapTile(t,e,i){if(void 0===t)return!1;var s=this.game.tiles.getByID("map",t),l=e*this.tileSize,o=i*this.tileSize;this.drawTile(s.colour,l,o)}drawTile(t,e,i){this.ctx.fillStyle=t,this.ctx.fillRect(i,e,this.tileSize,this.tileSize)}}class Game{constructor(){this.maps=new Maps,this.tiles=new Tiles,this.pushBlockTypes=new PushBlockTypes,this.level=new Level(this),this.player=new Player(this),this.pushBlocks=new PushBlocks(this),this.controls=new Controls(this),this.canvas=new Canvas(this)}run(){var t=this;this.loop=setInterval(function(){t.tick()},42)}tick(){this.canvas.drawFrame()}}var game=new Game;game.run();